{
  "version": "1.4.1",
  "revision": 44,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "name": "projekt_final",
      "mod": 1642462567210,
      "type": "sketch",
      "parent": "cc_hgk07_20220117",
      "code": "let credits = { \n    \"student_names\": \"Natalie Kohler, Marla Ritz\", \n    \"recode_id\": \"zotero2-2604593.A6YDGSNM\", \n    \"recode_timestamp\": \"63\", \n    \"recode_title\": \"turn\", \n    \"recode_designer\": \"Br√§ndli\", \n    \"recode_year\": 1987 \n\t\n}\n\n\n//circleColor \nlet black = 0\nlet white = 255\n\nlet z = 0\nlet t = 0\nlet angle = 0\nlet checkboxOpposite, guiHolder\nlet slider\n\n\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight)\n\tangleMode(DEGREES)\n\t\n\tguiHolder = createElement('div')\n\tguiHolder.class('gui-holder')\n\t\n\tcheckboxOpposite= createCheckbox ('negative', false)\n\tcheckboxOpposite.parent(guiHolder)\n\tcheckboxOpposite.style('color', '#fff')\n\t\n\tlabelText('speed')\n\tslider = createSlider(0, 40, 5);\n\tslider.parent(guiHolder)\n\tslider.style('width', '100px');\n\t\n\tsetupAudio()\n\t\n\tcreateElement('style', `\n\t\t\t\t.gui-holder {\n\t\t\t\tbackground: #404040;\n\t\t\t\tposition: fixed;\n\t\t\t\tleft: 70px;\n\t\t\t\ttop: 15px;\n\t\t\t\tfont-family: monaco;\n\t\t\t\tborder-radius: 5px;\n\t\t\t\tpadding: 15px;\n\t\t\t\theight: 77px;\n\t\t\t\twidth: 130px\n\t\t\t\t} \n\t\t\t\t`)\n}\n\nfunction labelText(txt) {\n\tmyText = createElement('div', txt)\n\tmyText.parent(guiHolder)\n\tmyText.class('my-text')\n\t\n\tcreateElement('style', `\n\t.my-text{\n\t\tmargin:10px;\n\t\tcolor: #fff;\n\t\t\n\t\t}\n\t`)\n}\n\nfunction draw() {\n\tbackground(0)\n\tnoStroke()\n\t\n\tlet val = slider.value();\n\tangle += slider.value();\n\t\n\tupdateAudio()\n\tz = 20\n\tt = ampEase*5\n\tangle = angle + 0.4\n\t\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tif(checkboxOpposite.checked()){\n\t\tblack = 255\n\t\twhite = 0\n\t}else{\n\t\tblack = 0\n\t\twhite = 255\n\t\tupdateAudio()\n\t}\n\n\t//kreis 7 weiss\n\tpush()\n\ttranslate(width / 2, height / 2)\n\trotate(angle)\n\tfill(white)\n\tcircle(z + 0, z + 250, t + 2000)\n\tpop()\n\n\t//kreis 6 schwarz\n\tpush()\n\ttranslate(width / 2, height / 2)\n\trotate(angle)\n\tfill(black)\n\tcircle(z + 100, z + 250, t + 1800)\n\tpop()\n\n\t//kreis 5 weiss\n\tpush()\n\ttranslate(width / 2, height / 2)\n\trotate(angle)\n\tfill(white)\n\tcircle(z + 0, z + 60, t + 1300)\n\tpop()\n\n\t//kreis 4 schwarz\n\tpush()\n\ttranslate(width / 2 - 20, height / 2 - 23)\n\trotate(angle)\n\tfill(black)\n\tcircle(z + 100, z -90, t + 1050)\n\tpop()\n\n\t//kreis 3 weiss\n\tpush()\n\ttranslate(width / 2 - 20, height / 2 - 23)\n\trotate(angle)\n\tfill(white)\n\tcircle(z + 80, z -10, t + 850)\n\tpop()\n\n\t//kreis 2 schwarz\n\tpush()\n\ttranslate(width / 2 - 20, height / 2 - 23)\n\trotate(angle)\n\tfill(black)\n\tcircle(z + 80, z + 80, t + 700)\n\tpop()\n\n\t//kreis 1 (in Mitte) weiss\n\tpush()\n\ttranslate(width / 2 - 20, height / 2 - 23)\n\trotate(angle)\n\tfill(white)\n\tcircle(z + 95, z + 20, t + 550)\n\tpop()\n\n\n\t//noLoop()\n\n}\n\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft = [],\n\twaveform = [],\n\tamp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\t\n\tbands = 12;\n\nfunction setupAudio() {\n\tuserStartAudio();\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}