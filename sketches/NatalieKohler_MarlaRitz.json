{
  "version": "1.4.1",
  "revision": 44,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "hgk07_031",
      "mod": 1641565369606,
      "code": "let credits = { \n    \"student_names\": \"Natalie Kohler, Marla Ritz\", \n    \"recode_id\": \"zotero2-2604593.A6YDGSNM\", \n    \"recode_timestamp\": \"63\", \n    \"recode_title\": \"turn\", \n    \"recode_designer\": \"Br√§ndli\", \n    \"recode_year\": 1987 \n}\n\n\nlet angle = 0\n\n//circleColor \nlet black = 0\nlet white = 255\n//let g = 0\n//let b = 0\n\nlet z = 0\nlet t = 0\nlet checkboxAudio\n\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight)\n\tangleMode(DEGREES)\n\tcheckboxAudio= createCheckbox ('use Audio', false)\n\tcheckboxAudio.\n\tposition(width/2*1.5, 200)\n\tcheckboxAudio.style('color', '#fff')\n\tcheckboxAudio.style('font-family',' monaco')\n\tsetupAudio()\n}\n\nfunction draw() {\n\tbackground(0)\n\tnoStroke()\n\t\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tif(checkboxAudio.checked()){\n\t\tupdateAudio()\n\t\tz = 20\n\t\tt = ampEase*5\n\t}else{\n\t\tz=0\n\t\tt=0\n\t}\n\n\t//if mouse is pressed or held down\n\tif(mouseIsPressed) {\n\t\tangle = angle + 20\n\t\tblack = 255\n\t\twhite = 0\n\t//if mouse is not pressed or held down\n\t} else {\n\t\tangle = angle + 4\n\t\tblack = 0\n\t\twhite = 255\n\t\t}\n\n\t//kreis 7 weiss\n\tpush()\n\ttranslate(width / 2, height / 2)\n\trotate(angle)\n\tfill(white)\n\tcircle(z + 0, z + 250, t + 2000)\n\tpop()\n\n\t//kreis 6 schwarz\n\tpush()\n\ttranslate(width / 2, height / 2)\n\trotate(angle)\n\t//fill(black, g, b)\n\tfill(black)\n\tcircle(z + 100, z + 250, t + 1800)\n\tpop()\n\n\t//kreis 5 weiss\n\tpush()\n\ttranslate(width / 2, height / 2)\n\trotate(angle)\n\tfill(white)\n\tcircle(z + 0, z + 60, t + 1300)\n\tpop()\n\n\t//kreis 4 schwarz\n\tpush()\n\ttranslate(width / 2 - 20, height / 2 - 23)\n\trotate(angle)\n\tfill(black)\n\tcircle(z + 100, z -90, t + 1050)\n\tpop()\n\n\t//kreis 3 weiss\n\tpush()\n\ttranslate(width / 2 - 20, height / 2 - 23)\n\trotate(angle)\n\tfill(white)\n\tcircle(z + 80, z -10, t + 850)\n\tpop()\n\n\t//kreis 2 schwarz\n\tpush()\n\ttranslate(width / 2 - 20, height / 2 - 23)\n\trotate(angle)\n\tfill(black)\n\tcircle(z + 80, z + 80, t + 700)\n\tpop()\n\n\t//kreis 1 (in Mitte) weiss\n\tpush()\n\ttranslate(width / 2 - 20, height / 2 - 23)\n\trotate(angle)\n\tfill(white)\n\tcircle(z + 95, z + 20, t + 550)\n\tpop()\n\n\n\t//noLoop()\n\n}\n\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft = [],\n\twaveform = [],\n\tamp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\t\n\tbands = 12;\n\nfunction setupAudio() {\n\tuserStartAudio();\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}