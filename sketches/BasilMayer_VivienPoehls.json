{
  "version": "1.4.1",
  "revision": 44,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "Tagesschau-F7",
      "mod": 1641564768889,
      "code": "let credits = { \n    \"student_names\": \"Basil Mayer, Vivien PÃ¶hls\", \n    \"recode_id\": \"zotero2-2604593.ICEWLSKL\", \n    \"recode_timestamp\": 0.41, \n    \"recode_title\": \"Tagesschau_progressiver Linienraster\", \n    \"recode_designer\": \"Philip Burton \", \n    \"recode_year\": 1972 \n} \n\nfunction preload() {\n\tfont = loadFont(\"https://cdn.glitch.me/56eac3ae-f704-4bf1-a8bb-35eff58fb663/tt0106m_.ttf?v=1641312832992\")\n}\nlet guiHolder\nlet txt = \"Tagesschau\"\nlet switchY = 0,\n\tswitchX = 0\nlet b\nlet bars = []\nlet button\nlet sliderThicknessX, sliderThicknessY, sliderFontSize\nlet checkboxDouble, checkboxNoise, checkboxEase\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight);\n\ttextFont(font)\n\ttextAlign(CENTER, CENTER)\n\trectMode(CENTER)\n\t\n\tguiHolder = createElement('div')\n\tguiHolder.class('gui-holder')\n\n\n\tsliderThicknessX = createSlider(0, 39, 0); //vertical stripes slider\n\t// sliderThicknessX.position(width / 2, 40);\n\tsliderThicknessX.parent(guiHolder)\n\tsliderThicknessX.style('width', '100px');\n\n\tsliderThicknessY = createSlider(0, 39, 0); //horizontal stripes slider\n\t// sliderThicknessY.position(width / 2, 70);\n\tsliderThicknessY.parent(guiHolder)\n\tsliderThicknessY.style('width', '100px');\n\n\tsliderFontSize = createSlider(100, 1000, 400, 50);\n\t// sliderFontSize.position(width / 2, 10);\n\tsliderFontSize.parent(guiHolder)\n\tsliderFontSize.style('width', '100px');\n\n\tcheckboxDouble = createCheckbox('Double lines', false)\n\t// checkboxDouble.position(width / 2, 130)\n\tcheckboxDouble.parent(guiHolder)\n\tcheckboxDouble.style('color', 'white')\n\tcheckboxDouble.changed(function() {\n\t\tif(this.checked()) {\n\t\t\tsliderThicknessX.attribute('max', 19)\n\t\t\tsliderThicknessY.attribute('max', 19)\n\t\t} else {\n\t\t\tsliderThicknessX.attribute('max', 39)\n\t\t\tsliderThicknessY.attribute('max', 39)\n\t\t}\n\t})\n\n\tcheckboxNoise = createCheckbox('Old-Video-Mode', false)\n\t// checkboxNoise.position(width / 2, 100)\n\tcheckboxNoise.parent(guiHolder)\n\tcheckboxNoise.style('color', 'white')\n\n\tcheckboxEase = createCheckbox('Ease', true)\n\t// checkboxEase.position(width / 2, 160)\n\tcheckboxEase.parent(guiHolder)\n\tcheckboxEase.style('color', 'white')\n\t// checkboxEase.changed(myEvent)\n\t// checkboxEase.changed(function(){\n\t// \tif(this.checked()) {\n\t// \t\tswitchX = valX\n\t// \t\tswitchY = valY\n\t// \t}\n\t// })\n\t\n\tlet myInput = createInput(txt); // create input w/ initial value \n\t// myInput.position(width / 2 - 170, 10); // set position \n\tmyInput.parent(guiHolder)\n\t//myInput.attribute('placeholder', 'Tagesschau') // suggest usage\n\n\t// fire this event on change \n\tmyInput.input(function() { // react immediately via 'anonymous function' \n\t\ttxt = this.value(); // update txt value \n\t});\n\t\n\t\t\tcreateElement('style', `\n\t\t\t*{\n\t\t\t\toutline: none;\n\t\t\t}\n\t\t.gui-holder{\n\t\t\tposition: fixed ;\n\t\t\tright: 5px;\n\t\t\ttop: 10px;\n\t\t\tborder: 1px solid #fff;\n\t\t\tborder-radius:5px;\n\t\t\tpadding:15px;\n\t\t\theight:147px;\n\t\t\twidth: 150px;\n\t\t\tfont-family: monospace;\n\t\t\t//background: red;\n\t\t}\n\t\n\t`)\n}\n\nfunction draw() {\n\tlet valX = sliderThicknessX.value();\n\tlet valY = sliderThicknessY.value();\n\tlet valFS = sliderFontSize.value();\n\n\tbackground(0)\n\n\ttagesschau(txt, valFS) //text and fontsize\n\t\n\tlet d = 40 //stripe distance\n\n\tif(checkboxEase.checked()) {\n\t\t\n\t\tif(frameCount % d == 0) {\n\t\t\tbars.push(new Bar(switchX, switchY))\n\t\t}\n\t\tif(checkboxDouble.checked()) {\n\t\t\tif(frameCount % d == d / 2) { //doubles stripes (tied to distance)\n\t\t\t\tbars.push(new Bar(switchX, switchY))\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif(frameCount % d == 0) {\n\t\t\tbars.push(new Bar(valX, valY))\n\t\t}\n\n\t\tif(checkboxDouble.checked()) {\n\t\t\tif(frameCount % d == d / 2) { //doubles stripes (tied to distance)\n\t\t\t\tbars.push(new Bar(valX, valY))\n\t\t\t}\n\t\t}\n\t}\n\n\tlet p = valX\n\tif(frameCount % d == 0) {\n\t\tif(switchX < p) {\n\t\t\tswitchX++\n\t\t}\n\t\tif(switchX == p) {\n\t\t\tswitchX = p\n\t\t}\n\t\tif(switchX > p) {\n\t\t\tswitchX--\n\t\t}\n\t}\n\n\tlet q = valY\n\tif(frameCount % d == 0) {\n\t\tif(switchY < q) {\n\t\t\tswitchY++\n\t\t}\n\t\tif(switchY == q) {\n\t\t\tswitchY = q\n\t\t}\n\t\tif(switchY > q) {\n\t\t\tswitchY--\n\t\t}\n\t}\n\n\t//\tb.display()\n\n\tfor(let b of bars) {\n\t\tb.display()\n\t}\n\t// print(switchX)\n}\n\n// function myEvent() {\n//   if (this.checked()) {\n//     switchX = valX\n//     switchX = valX\n//   }\n// }\n\nfunction tagesschau(t, size) {\n\tfill(255)\n\ttextSize(size)\n\tif(checkboxNoise.checked()) {\n\t\ttext(t, (width / 2) + noise(sin(frameCount * .042)) * 10, (height / 2) + noise(sin(frameCount * .04)) * 10) //old movie text movement\n\t} else {\n\t\ttext(t, (width / 2), (height / 2))\n\t}\n}\n\nclass Bar {\n\tconstructor(swX, swY) {\n\t\tthis.x = 0\n\t\tthis.swX = swX\n\t\tthis.swY = swY\n\t}\n\n\tdisplay() {\n\t\tthis.x += 1\n\t\tpush()\n\t\tstroke(0)\n\n\t\tstrokeWeight(this.swX)\n\t\tline(this.x, 0, this.x, height) //vertical stripes\n\n\n\t\tstrokeWeight(this.swY)\n\t\tline(0, this.x, width, this.x) //horizontal stripes\n\n\t\tpop()\n\t}\n\n}"
    }
  ]
}