{
  "version": "1.4.1",
  "revision": 44,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "LuanaUmeh_MaxUmeh",
      "mod": 1641562740447,
      "code": "let credits = { \n    \"student_names\": \"Luana Umeh, Max Umeh\", \n    \"recode_id\": \"zotero2-2604593.7M7KCHA9\", \n    \"recode_timestamp\": 7, \n    \"recode_title\": \"OMBRE\", \n    \"recode_designer\": \"Marie Christine Bayssas\", \n    \"recode_year\": 1982\n} \n\n\nlet c01, c02, c03, slider1, slider2, button1, button2, button3, text1, text2, b01, b02, b03, n, dirX, dirY, r\n\n\nlet darkMode = false\nlet farbMode = true\nlet audioMode = false\n\n\nfunction setup() {\n\tcreateCanvas(windowWidth, windowHeight, WEBGL);\n\n\tslider1 = createSlider(40, 250, 100, .1).position(140, 48)\n\tslider1.style(`\n\t  position: fixed; \n\t  width: 150px;\n\t  -webkit-appearance: none;\n\t  left: 50px; \n      top: 50px; \n      font-family: sans-serif;\n      font-size: 10pt;\n\t  font-weight: 400;\n\t  letter-spacing: .5pt;\n\t  background: #fff;\n      height: 5px;\n      border-radius: 5px;\n\t`)\n\n\n\tslider2 = createSlider(0.95, 1.05, 1, .001).position(140, 48)\n\tslider2.style(`\n\t  position: fixed; \n\t  width: 150px;\n\t  -webkit-appearance: none;\n\t  appearance: none;\n\t  left: 250px; \n      top: 50px; \n      font-family: sans-serif;\n      font-size: 10pt;\n\t  font-weight: 400;\n\t  letter-spacing: .5pt;\n\t  background: #fff;\n      height: 5px;\n      border-radius: 5px;\n\t`)\n\n\ttext1 = createP(\"Schatten\").position(142, 13)\n\ttext1.style(`\n\t  left: 51px; \n\t  font-family: sans-serif;\n      font-size: 10pt;\n\t  font-weight: 400;\n\t  letter-spacing: .5pt;\n\t`)\n\n\ttext2 = createP(\"Gr√∂sse\").position(142, 13)\n\ttext2.style(`\n\t  left: 251px; \n\t  font-family: sans-serif;\n      font-size: 10pt;\n\t  font-weight: 400;\n\t  letter-spacing: .5pt;\n\t`)\n\n\n\tbutton1 = createButton('Dunkel')\n\tbutton1.mousePressed(function() {\n\t\ttoggleMode()\n\t})\n\tbutton1.style(`\n\t  position: fixed; \n\t  left: 450px; \n      top: 32px; \n      font-family: sans-serif;\n      font-size: 10pt;\n\t  font-weight: 400;\n\t  letter-spacing: 1pt;\n\t  color: #000;\n\t  background: #0072ff;\n      padding-left: 40px;\n\t  padding-right: 40px;\n\t  padding-top: 5px;\n\t  padding-bottom: 5px;\n\t  border-radius: 10px;\n\t  width: 150px;\n\t  transition: width .5s;\n\t  color: #fff;\n\t  border: none;\n\t`)\n\n\n\n\tbutton2 = createButton('Farbmodus')\n\tbutton2.mousePressed(function() {\n\t\ttoggleMode2()\n\t})\n\tbutton2.style(`\n\t  position: fixed; \n\t  left: 650px; \n      top: 32px; \n      font-family: sans-serif;\n      font-size: 10pt;\n\t  font-weight: 400;\n\t  letter-spacing: 1pt;\n\t  color: #000;\n\t  background: #0072ff;\n      padding-left: 40px;\n\t  padding-right: 40px;\n\t  padding-top: 5px;\n\t  padding-bottom: 5px;\n\t  border-radius: 10px;\n\t  width: 150px;\n\t  transition: width .5s;\n\t  color: #fff;\n\t  text-align: center;\n\t  border: none;\n\t`)\n\t\n\tbutton3 = createButton('Audio')\n\tbutton3.mousePressed(function() {\n\t\ttoggleMode3()\n\t})\n\tbutton3.style(`\n\t  position: fixed; \n\t  left: 850px; \n      top: 32px; \n      font-family: sans-serif;\n      font-size: 10pt;\n\t  font-weight: 400;\n\t  letter-spacing: 1pt;\n\t  color: #000;\n\t  background: #0072ff;\n      padding-left: 40px;\n\t  padding-right: 40px;\n\t  padding-top: 5px;\n\t  padding-bottom: 5px;\n\t  border-radius: 10px;\n\t  width: 150px;\n\t  transition: width .5s;\n\t  color: #fff;\n\t  text-align: center;\n\t  border: none;\n\t`)\n\n\t\n\ttoggleMode2()\n\ttoggleMode()\n\tsetupAudio()\n}\n\nfunction toggleMode() {\n\tdarkMode = !darkMode\n\tif(!darkMode) {\n\t\tb01 = 20\n\t\tb02 = 20\n\t\tb03 = 20\n\t\ttext1.style('color', '#fff')\n\t\ttext2.style('color', '#fff')\n\t\tbutton1.html('Hell')\n\n\t} else {\n\t\tb01 = 245\n\t\tb02 = 245\n\t\tb03 = 245\n\t\ttext1.style('color', '#222222')\n\t\ttext2.style('color', '#222222')\n\t\tbutton1.html('Dunkel')\n\t}\n}\n\nfunction toggleMode2() {\n\tfarbMode = !farbMode\n\tif(!farbMode) {\n\t\tc01 = slider1.value() % 255\n\t\tc02 = slider1.value() % 255\n\t\tc03 = slider1.value() % 255\n\t\tbutton2.html('Farbmodus')\n\t\tbutton2.style('padding-left', '40px')\n\t} else {\n\t\tc01 = random(40, 250)\n\t\tc02 = random(160, 200)\n\t\tc03 = random(80, 180)\n\t\tbutton2.style('padding-left', '25px')\n\t\tbutton2.html('Schwarzweiss')\n\t}\n}\n\nfunction toggleMode3() {\n\taudioMode = !audioMode\n\tif(!audioMode) {\n\t\tr = 1\n\t\tbutton3.html('Audio an')\n\t\tbutton3.style('padding-left', '35px')\n\t} else {\n\t\tr = (ampEase*.0095)+1\n\t\tbutton3.style('padding-left', '35px')\n\t\tbutton3.html('Audio aus')\n\t}\n}\n\nfunction lighting() {\n\ttoggleMode3()\n\tdirX = (mouseX / width - 0.5) * 3\n    dirY = (mouseY/ height - 0.5) * 3\n\t\n\tdirectionalLight(c01, c02, c03, dirX, dirY, -1)\n\tdirectionalLight(c01, c02, c03, dirX, dirY, -1)\n\tdirectionalLight(c01, c02, c03, dirX, dirY, -1)\n\tdirectionalLight(c01, c02, c03, dirX, dirY, -2)\n\tdirectionalLight(c01, c02, c03, dirX, dirY, -2)\n\tdirectionalLight(c01, c02, c03, dirX, dirY, -2)\n\tdirectionalLight(c01, c02, c03, dirX, dirY, -2)\n}\n\nfunction draw() {\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tupdateAudio();\n\tbackground(b01, b02, b03)\n\tnoStroke()\n\tn = slider2.value()*r\n\n\tpush()\n\tscale(n)\n\t//translate(-width*.001,-height*.001,0)\n\tlOmbre(-400, 0, 0)\n\tloMbre(-120, 0, 0)\n\tlomBre(60, -7, 0)\n\tlombRe(220, -7, 0)\n\tlombrE(430, -7, 0)\n\tpop()\n\n}\n\n\n\n\nfunction lOmbre(x, y, z) {\n\tpush()\n\ttranslate(x, y, z)\n\tscale(1)\n\tpush()\n\n\t// Moving light via mouse direction\n\tpush()\n\tlighting()\n\tsphere(100)\n\tpop()\n\n\t// Forground sphere\n\tpush()\n\ttranslate(abs(x * .135), 2.8, 100)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\tsphere(84)\n\tpop()\n\tpop()\n\tpop()\n}\n\n\n\nfunction loMbre(x, y, z) {\n\tpush()\n\ttranslate(x, y, z)\n\tangleMode(DEGREES)\n\n\tpush()\n\ttranslate(-40, 0, -140)\n\t// rechts\n\tpush()\n\ttranslate(-7, -20, -200)\n\trotateY(-190)\n\tlighting()\n\tbox(190, 300, 170)\n\tpop()\n\n\t// Abdeckung (rechts)\n\tpush()\n\ttranslate(-14.5, -30, -100)\n\trotate(-0.5)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\tbox(185, 330, 170)\n\tpop()\n\n\t// Abdeckung 02 (rechts)\n\tpush()\n\ttranslate(201, -20, 30)\n\trotate(1)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\tbox(190, 250, 170)\n\tpop()\n\n\t// Mittleres Eck\n\tpush()\n\ttranslate(35, -125, 120)\n\tlighting()\n\trotateY(10)\n\trotateX(16)\n\trotateZ(46)\n\tbox(130, 180, 50)\n\tpop()\n\n\t// Abdeckung\n\tpush()\n\ttranslate(46.5, -131, 200)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\trotateY(10)\n\trotateX(29)\n\trotateZ(45)\n\tbox(140, 180, 50)\n\tpop()\n\tpop()\n\tpop()\n}\n\n\n\nfunction lomBre(x, y, z) {\n\tpush()\n\ttranslate(x, y, z)\n\n\t// Upper Circle\n\t// Moving light via mouse direction\n\tpush()\n\ttranslate(0, -50, 0)\n\tlighting()\n\tsphere(40)\n\tpop()\n\n\t// Forground sphere\n\tpush()\n\ttranslate(-13, -42, 100)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\tsphere(34)\n\tpop()\n\n\t// Lower Circle\n\t// Moving light via mouse direction\n\tpush()\n\ttranslate(0, +50, 0)\n\tlighting()\n\tsphere(60)\n\tpop()\n\n\t// Forground sphere\n\tpush()\n\ttranslate(-15, +44, 100)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\tsphere(52)\n\tpop()\n\n\tpop()\n}\n\n\n\nfunction lombRe(x, y, z) {\n\tpush()\n\ttranslate(x, y, z)\n\n\t// Upper Circle\n\t// Moving light via mouse direction\n\tpush()\n\ttranslate(0, -50, 0)\n\tlighting()\n\tsphere(40)\n\tpop()\n\n\t// Forground sphere\n\tpush()\n\ttranslate(-38, -42, 100)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\tsphere(34)\n\tpop()\n\n\t// Lower Circle\n\t// Moving light via mouse direction\n\tpush()\n\ttranslate(+19, +88, 0)\n\tangleMode(DEGREES)\n\trotate(49)\n\n\tpush()\n\ttranslate(5, -54, -100)\n\tlighting()\n\trotateY(180)\n\trotateX(-40)\n\tbox(200, 20, 20)\n\tpop()\n\n\tpush()\n\trotateX(2)\n\trotate(-3)\n\ttranslate(-10, 12, 0)\n\tfill(b01, b02, b03)\n\tbox(220, 100, 20)\n\trotate(-46)\n\ttranslate(-10, -150, 0)\n\tfill(b01, b02, b03)\n\tbox(220, 100, 20)\n\tpop()\n\tpop()\n\n\tpop()\n}\n\n\n\nfunction lombrE(x, y, z) {\n\tpush()\n\ttranslate(x, y, z)\n\n\t// oberes Rechteck\n\t// Moving light via mouse direction\n\n\tpush()\n\ttranslate(8, -70, 0)\n\tlighting()\n\tangleMode(DEGREES)\n\trotateY(-48)\n\trotateZ(6)\n\trotateX(-22)\n\tbox(115, 25, 20)\n\tpop()\n\n\t// Forground oberes Rechteck\n\tpush()\n\ttranslate(-35, -60, 57)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\trotate(3)\n\tbox(129, 30, 10)\n\tpop()\n\n\t// 2 Forground oberes Rechteck\n\tpush()\n\ttranslate(38, -60, 70)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\trotate(11)\n\tbox(22, 55, 4)\n\tpop()\n\n\t// mittleres Rechteck\n\t// Moving light via mouse direction\n\tpush()\n\ttranslate(0, -25, 0)\n\n\tpush()\n\ttranslate(5, 3, 0)\n\tlighting()\n\tangleMode(DEGREES)\n\trotateY(-60)\n\trotateZ(-1)\n\trotateX(-55)\n\tbox(90, 35, 50)\n\tpop()\n\n\t// Forground mittleres Rechteck\n\tpush()\n\ttranslate(-54.8, -1, 80)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\trotateY(22)\n\trotateX(-10)\n\trotate(-2.5)\n\tbox(120, 60, 30)\n\tpop()\n\n\t// 2 Forground mittleres Rechteck\n\tpush()\n\ttranslate(15, 5, 78)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\trotate(-1)\n\tbox(25, 55, 5)\n\tpop()\n\tpop()\n\t// unteres Rechteck\n\t// Moving light via mouse direction\n\tpush()\n\tangleMode(DEGREES)\n\trotate(2)\n\n\n\tpush()\n\ttranslate(35.8, 88, 0)\n\tlighting()\n\tangleMode(DEGREES)\n\trotateY(-48)\n\trotateZ(-8)\n\trotateX(-55)\n\tbox(120, 25, 40)\n\tpop()\n\n\t// Forground unteres Rechteck\n\tpush()\n\ttranslate(-18, 72, 80)\n\tnoStroke()\n\tfill(b01, b02, b03)\n\trotateY(16)\n\trotateX(-10)\n\trotate(-2)\n\tbox(170, 50, 10)\n\tpop()\n\tpop()\n\n\tpop()\n}\n\n\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft = [],\n\twaveform = [],\n\tamp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tuserStartAudio();\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}