{
  "version": "1.4.1",
  "revision": 44,
  "count": {
    "sketches": 1,
    "folders": 0
  },
  "structure": [
    {
      "type": "sketch",
      "name": "hgk04_009",
      "mod": 1641563254469,
      "parent": "cc_hgk04_20220107",
      "code": "let credits = {\n\t\"student_names\": \"Mia_Sommerhalder, Medea_Del_Vasto\",\n\t\"recode_id\": \"zotero2-2604593.FRCJT9HJ\",\n\t\"recode_timestamp\": 0,\n\t\"recode_title\": \"Pfeile HICO\",\n\t\"recode_designer\": \"unkown\",\n\t\"recode_year\": 1977\n}\n\nlet checkboxAudio, guiHolder\n\n\nlet slider\nlet slider2\nlet slider3\nlet slider4\nlet slider5\n\nfunction setup() {\n\n\tcreateCanvas(windowWidth, windowHeight)\n\trectMode(CENTER)\n\tangleMode(DEGREES)\n\n\tguiHolder = createElement('div')\n\tguiHolder.class('gui-holder')\n\n\tcreateElement('style', `\n\t\t.gui-holder{\n\t\t\tposition: fixed;\n\t\t\tright: 20px;\n\t\t\ttop: 100px;\n\t\t\tstroke: 255;\n\t\t\tborder: 1px, solid;\n\t\t\tborder-radius: 5px;\n\t\t\t//background: red;\n\t\t\theight: 200px;\n\t\t\twidth: 150px;\n\t\t\tfont-family: 'helvetica', 'nonospace';\n\t\t}\n\t`)\n\n\t//Slider\n\tslider = createSlider(0.5, 40, 10);\n\tslider.parent(guiHolder)\n\tslider.style('width', '100px');\n\tslider.style('margin-bottom', '20px')\n\n\tslider2 = createSlider(0, 255, 255, 255)\n\tslider2.parent(guiHolder)\n\tslider2.style('width', '100px');\n\tslider2.style('margin-bottom', '20px')\n\n\tslider3 = createSlider(0.5, 1, 1, 0);\n\tslider3.parent(guiHolder)\n\tslider3.style('width', '100px')\n\tslider3.style('margin-bottom', '20px')\n\n\tslider4 = createSlider(0.1, 4, 1, 0);\n\tslider4.parent(guiHolder)\n\tslider4.style('width', '100px')\n\tslider4.style('margin-bottom', '20px')\n\n\tslider5 = createSlider(0, 255, 255, 10);\n\tslider5.parent(guiHolder)\n\tslider5.style('width', '100px')\n\tslider5.style('margin-bottom', '20px')\n\n\tcheckboxRotation = createCheckbox('Rotation', false);\n\tcheckboxRotation.parent(guiHolder)\n\tcheckboxRotation.style('color', '#fff')\n\tcheckboxRotation.style('font-family', 'helvetica', 'monospace')\n\tcheckboxRotation.style('margin-bottom', '15px')\n\n\tcheckboxAudio = createCheckbox('Use Audio', false);\n\tcheckboxAudio.parent(guiHolder)\n\tcheckboxAudio.style('color', '#fff')\n\tcheckboxAudio.style('font-family', 'helvetica', 'monospace')\n\tcheckboxAudio.style('margin-bottom', '15px')\n\n\tsetupAudio();\n\n}\n\nfunction draw() {\n\n\t/* audio vars: amp, ampEase, fft, waveform */\n\tif(checkboxAudio.checked()) {\n\t\tupdateAudio()\n\t}\n\n\n val = slider.value();\n val2 = slider2.value();\n val3 = slider3.value()\n val4 = slider4.value()\n val5 = slider5.value()\n\nbackground(0, val5);\n\nstrokeWeight(val + ampEase * 0.4)\nfill(val2)\nstroke(255)\ntranslate(CENTER)\n\n\n//animation loop arrows (left and right)\n\nif(!checkboxRotation.checked()) {\n\tval6 = 0\n\tarrow(frameCount * 5 * val4 % width * -2 + height * 2, height * 0.21, val6) // arrow oben\n\tarrow(frameCount * 10 * val4 % width * +2 - height * 1, height * 0.55, val6 + 180) // arrow mitte\n\tarrow(frameCount * 10 * val4 % width * -2 + height * 2, height * 0.72, val6) // arrow unten\n\tarrow(frameCount * 25 * val4 % width * +2 - height * 1, height * 0.72, val6 + 180) // arrow unten gedreht\n\n} else { \n\tval6 = 90\n\tarrow(width * 0.25, frameCount * 5 * val4 % width * -2 + height * 2, val6) // arrow oben\n\tarrow(width * 0.5, frameCount * 10 * val4 % width * +2 - height * 1, val6 + 180) // arrow mitte\n\tarrow(width * 0.75, frameCount * 10 * val4 % width * -2 + height * 2, val6) // arrow unten\n\tarrow(width * 0.75, frameCount * 25 * val4 % width * +2 - height * 1, val6 + 180) // arrow unten gedreht\n\n\t}\n}\n\nfunction arrow(x, y, deg) {\n\tstroke(255)\n\n\tpush()\n\n\ttranslate(x, y)\n\trotate(deg)\n\n\tbeginShape()\n\tvertex(0, 0)\n\tvertex(height * 0.2 * val3, height * -0.25)\n\tvertex(height * 0.37 * val3, height * -0.25)\n\tvertex(height * 0.23 * val3, height * -0.079 * val3)\n\tvertex(height * 0.78, height * -0.079 * val3)\n\tvertex(height * 0.78, height * 0.079 * val3)\n\tvertex(height * 0.23 * val3, height * 0.079 * val3)\n\tvertex(height * 0.37 * val3, height * 0.25)\n\tvertex(height * 0.2 * val3, height * 0.25)\n\tvertex(0, 0)\n\tendShape(CLOSE)\n\tpop()\n}\n\n/* AUDIO INIT */\nlet mic, fftRaw, fft = [],\n\twaveform = [],\n\tamp = 0.0,\n\tampStereo = {\n\t\tl: 0.0,\n\t\tr: 0.0\n\t},\n\tampEase = 0.0,\n\tnumBins = 512,\n\tbands = 12;\n\nfunction setupAudio() {\n\tuserStartAudio();\n\tmic = new p5.AudioIn();\n\tmic.start();\n\tfftRaw = new p5.FFT(0.75, numBins);\n\tfftRaw.setInput(mic);\n}\n\nfunction updateAudio() {\n\tfftRaw.analyze();\n\tamp = mic.getLevel() * 1000; // average mixed amplitude\n\tampStereo.l = mic.amplitude.getLevel(0) * 500; // average left amplitude\n\tampStereo.r = mic.amplitude.getLevel(1) * 500; // average right amplitude\n\tampEase = ease(amp, ampEase, 0.075); // smooth 'amp'\n\twaveform = fftRaw.waveform(); // array (-1, 1)\n\tfft = fftRaw.logAverages(fftRaw.getOctaveBands(bands)); // array (0, 255)\n}"
    }
  ]
}